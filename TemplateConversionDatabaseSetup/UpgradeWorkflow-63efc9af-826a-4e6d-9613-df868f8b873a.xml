<joblist>
  <job>
    <context>
      <options preserveOrder='true'>
        <option name='CLIENT_CODE' required='true' valuesUrl='file:/rundeckpro/optionProviders/ClientCodes.json'>
          <description>This is the client code</description>
        </option>
        <option name='CADN_USERNAME' required='true'>
          <description>Please put your CADN Username</description>
        </option>
        <option name='SADN_USERNAME' required='true'>
          <description>Please put your SADN Username</description>
        </option>
        <option name='SADN_PASSWORD' required='true' secure='true' valueExposed='true'>
          <description>SADN password</description>
        </option>
        <option name='DATABASE_NAME' required='true'>
          <description><![CDATA[The Database you try to restore to
example: STMM\_DEV1\_MAIN, BCM\_DEV2\_MAIN]]></description>
        </option>
        <option enforcedvalues='true' name='DB_BACKUP' required='true' value='1' values='0,1'>
          <description><![CDATA[This is the option to choose which backup for your DB restore
(Prebackup: 0
Postbackup: 1)]]></description>
        </option>
        <option name='SERVER_PORT' required='true' values='8081,8082,8083'>
          <description>This is the server port name example: 8081,8082</description>
        </option>
        <option name='MT_SERVICE_NAME' required='true' values='CharlesRiverIMS01,CharlesRiverIMS02,CharlesRiverIMS03'>
          <description><![CDATA[Middle Tier service name
example: CharlesRiverIMS01, CharlesRiverIMS02, CharlesRiverIMS03 ...]]></description>
        </option>
        <option name='DBMS_SERVERNAME' required='true'>
          <description><![CDATA[Please put in the DBMS_SERVERNAME
for example: upg-t1.ms.crd.com]]></description>
        </option>
        <option enforcedvalues='true' name='PREDBUpgradeSQL' required='true' value='N' values='N,Y'>
          <description>Flag determining if any SQL script needs to run before the DB Upgrade</description>
        </option>
        <option enforcedvalues='true' name='PostDBUpgradeSQL' required='true' value='N' values='N,Y'>
          <description>Flag determining if any SQL needs to be executed after DB Upgrade</description>
        </option>
        <option enforcedvalues='true' name='LDAP' required='true' value='N' values='N,Y'>
          <description>Flag determining if MT LDAP authentication will be turned on</description>
        </option>
      </options>
    </context>
    <description><![CDATA[Automated single client workflow of upgrade jobs

`Running this step will Restore and Prepare a CRIMS environment`


#### This job will run step 1-5 from CRIMSUpgradeTest


***`What does this step do?`***

1. DB Restore + DB Upgrade Preparation
2. DB Upgrade + Masking Script
3. Index Refresh
4. Diagnostic Report
5. MT Config and Start Up


***`Required Fields:`***

1. CLIENT_CODE - Client code
2. CADN_USERNAME - CRIMS user account.  **Only for CRIMS 9.8 +**
3. SADN_USERNAME - SADN user
4. SADN_PASSWORD - SADN password
5. DATABASE_NAME - The Database you try to restore to
6. DB_BACKUP - This is the option to choose which backup for your DB restore
7. SERVER_PORT - Server port 8081,8082
8. MT_SERVICE_NAME - CharlesRiverIMS01, CharlesRiverIMS02, CharlesRiverIMS03 ...
9. PREDBUpgradeSQL - Flag determining if any SQL script needs to run before the DB Upgrade
10. PostDBUpgradeSQL - Flag determining if any SQL needs to be executed after DB Upgrade
11. LDAP - Flag determining if MT LDAP authentication will be turned on



---
Troubleshoot Guide:

1. Nothing to note
]]></description>
    <dispatch>
      <excludePrecedence>true</excludePrecedence>
      <keepgoing>false</keepgoing>
      <rankOrder>ascending</rankOrder>
      <successOnEmptyNodeFilter>true</successOnEmptyNodeFilter>
      <threadcount>1</threadcount>
    </dispatch>
    <executionEnabled>true</executionEnabled>
    <group>TemplateConversionDatabaseSetup</group>
    <id>63efc9af-826a-4e6d-9613-df868f8b873a</id>
    <loglevel>INFO</loglevel>
    <name>UpgradeWorkflow</name>
    <nodeFilterEditable>true</nodeFilterEditable>
    <nodefilters>
      <filter>tags:17R1,Test</filter>
    </nodefilters>
    <nodesSelectedByDefault>false</nodesSelectedByDefault>
    <notification>
      <onfailure>
        <email attachLog='true' recipients='MattAmbrose@crd.com,WeijieLin@crd.com,MatthewTam@crd.com' subject='RUNDECK ${node.name} ${job.name} failure' />
      </onfailure>
      <onsuccess>
        <email attachLog='true' recipients='MattAmbrose@crd.com,WeijieLin@crd.com,MatthewTam@crd.com' subject='RUNDECK ${node.name} ${job.name} succeed' />
      </onsuccess>
    </notification>
    <scheduleEnabled>true</scheduleEnabled>
    <sequence keepgoing='true' strategy='node-first'>
      <command>
        <description>Init VM</description>
        <jobref group='TemplateConversionDatabaseSetup' name='Initialize Upgrade VM ' nodeStep='true'>
          <arg line='-UpgradeNodeSelection ${node.hostname} -CLIENT_CODE ${option.CLIENT_CODE} -Branch "test"' />
          <nodefilters>
            <filter>name: Ansible</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>db restore + db upgrade preparation</description>
        <jobref group='TemplateConversionDatabaseSetup' name='1 - DB Restore + DB Upgrade preparation' nodeStep='true'>
          <arg line='-CLIENT_CODE ${option.CLIENT_CODE} -CADN_USERNAME ${option.CADN_USERNAME} -SADN_USERNAME ${option.SADN_USERNAME} -DATABASE_NAME ${option.DATABASE_NAME} -DB_BACKUP ${option.DB_BACKUP} -SERVER_PORT ${option.SERVER_PORT} -PREDBUpgradeSQL ${option.PREDBUpgradeSQL} -LDAP ${option.LDAP}' />
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>DB upgrade + script for removing PROD configuration data</description>
        <jobref group='TemplateConversionDatabaseSetup' name='2 - DB Upgrade + Masking Script' nodeStep='true'>
          <arg line='-SADN_USERNAME ${option.SADN_USERNAME} -SADN_PASSWORD ${option.SADN_PASSWORD} -DATABASE_NAME ${option.DATABASE_NAME} -PostDBUpgradeSQL ${option.PostDBUpgradeSQL} -LDAP ${option.LDAP}' />
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>index maintenance plan</description>
        <jobref group='TemplateConversionDatabaseSetup' name='3 - Index Refresh' nodeStep='true'>
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>SQL SPs that are part of Discrepancy report are executed</description>
        <jobref group='TemplateConversionDatabaseSetup' name='4 - Diagnostic Report' nodeStep='true'>
          <arg line='-DATABASE_NAME ${option.DATABASE_NAME}' />
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>Create Crd Configure File</description>
        <jobref group='TemplateConversionDatabaseSetup' name='5_CreateCrd_ConfigureFile'>
          <arg line='-CLIENT_CODE ${option.CLIENT_CODE} -DBMS_SERVERNAME ${option.DBMS_SERVERNAME} -DATABASE_NAME ${option.DATABASE_NAME}  -SADN_USERNAME ${option.SADN_USERNAME} -SADN_PASSWORD ${option.SADN_PASSWORD} ' />
        </jobref>
      </command>
      <command>
        <description>CRD CONFIGURE CONSOLE</description>
        <jobref group='TemplateConversionDatabaseSetup' name='6_CRD_CONFIGURE_CONSOLE'>
          <arg line='-CLIENT_CODE ${option.CLIENT_CODE}' />
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
      <command>
        <description>MT configuration and start up</description>
        <jobref group='TemplateConversionDatabaseSetup' name='7 - MT config and start up' nodeStep='true'>
          <arg line='-DATABASE_NAME ${option.DATABASE_NAME} -SERVER_PORT ${option.SERVER_PORT} -MT_SERVICE_NAME ${option.MT_SERVICE_NAME}' />
          <nodefilters>
            <filter>hostname:${node.hostname}</filter>
          </nodefilters>
        </jobref>
      </command>
    </sequence>
    <timeout>3h</timeout>
    <uuid>63efc9af-826a-4e6d-9613-df868f8b873a</uuid>
  </job>
</joblist>
