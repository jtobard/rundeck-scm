<joblist>
  <job>
    <description><![CDATA[Task_ID: 67
Test DB: verify SQL collation is set to SQL_Latin1_General_CP1_CI_AS]]></description>
    <dispatch>
      <excludePrecedence>true</excludePrecedence>
      <keepgoing>false</keepgoing>
      <rankOrder>ascending</rankOrder>
      <successOnEmptyNodeFilter>true</successOnEmptyNodeFilter>
      <threadcount>1</threadcount>
    </dispatch>
    <executionEnabled>true</executionEnabled>
    <group>DatabaseConfiguration</group>
    <id>5eee686f-5cd7-4248-833a-a54011c49cb8</id>
    <loglevel>INFO</loglevel>
    <name>VerifySQLCollation</name>
    <nodeFilterEditable>false</nodeFilterEditable>
    <nodefilters>
      <filter>tags:CRIMS,Test</filter>
    </nodefilters>
    <nodesSelectedByDefault>false</nodesSelectedByDefault>
    <scheduleEnabled>true</scheduleEnabled>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <description>Verify expected SQL collation</description>
        <fileExtension>ps1</fileExtension>
        <script><![CDATA[write-host "Checking SQL server collation"

$sqlCollation = Invoke-Sqlcmd -ServerInstance $env:COMPUTERNAME -Query "SELECT SERVERPROPERTY('COLLATION');"

if ($sqlCollation[0] -eq "SQL_Latin1_General_CP1_CI_AS")
{   
    Write-Host "Expected SQL server collation - SQL_Latin1_General_CP1_CI_AS. "
    exit 0
}
else
{
    Write-Host "Unexpected SQL server collation. Current collation is" $sqlCollation[0] 
    exit 1
}]]></script>
        <scriptargs />
      </command>
    </sequence>
    <uuid>5eee686f-5cd7-4248-833a-a54011c49cb8</uuid>
  </job>
</joblist>
